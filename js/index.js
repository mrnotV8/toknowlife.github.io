const form_data_id = document.getElementById("form_data_id");

// ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
let currentSelectedButton = null;

//Input
var wallet_type_code_id = document.getElementById("wallet_type_code_id");
var wallet_type_text_id = document.getElementById("wallet_type_text_id");

//Msg
const alert_msg_id = document.getElementById("alert_msg_id");

// ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°
document.querySelectorAll('.payment-buttons .btn').forEach(button => {
    button.addEventListener('click', function() {
      // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏™‡∏µ‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Å‡πà‡∏≠‡∏ô
      ClearButtonStyles();
      
      // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏™‡∏µ‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
      this.classList.remove('btn-outline-primary');
      this.classList.add('btn-primary');
      currentSelectedButton = this;
      
      // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤ Value ‡πÅ‡∏•‡∏∞ Text
      const value = this.getAttribute('data-value');
      const text = this.textContent.trim().replace(/\s[A-Za-z]$/, ''); // ‡∏•‡∏ö‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£ A/B/C ‡∏ó‡πâ‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠
      
      // ‡πÉ‡∏™‡πà‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô hidden inputs
      //document.getElementById('wallet_type_code_id').value = value;
      //document.getElementById('wallet_type_text_id').value = text;
      // wallet_type_code_id = value;
      // wallet_type_text_id = text;
      
      wallet_type_code_id.value = value;
      wallet_type_text_id.value = text;

      console.log('‡πÄ‡∏•‡∏∑‡∏≠‡∏Å:', text, '‡∏Ñ‡πà‡∏≤:', value);
    });
  });

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏™‡∏µ‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
function ClearButtonStyles() {
    document.querySelectorAll('.payment-buttons .btn').forEach(btn => {
      btn.classList.remove('btn-primary');
      btn.classList.add('btn-outline-primary');
    });
  }


async function Confirm(){
    try {
   
      const result = await Swal.fire({
        title: '‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°',
        text: '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤‡∏ï‡∏±‡∏á ‡πÉ‡∏ä‡πà ‡∏´‡∏£‡∏∑‡∏≠ ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å ? ',
        icon: 'question',
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes",
    });
   
    if (result.isConfirmed) {
        const sel_type_details = document.getElementById("details_type_code_id");
        document.getElementById("details_type_text_id").value = sel_type_details.options[sel_type_details.selectedIndex].text;

        var form_data = new FormData(form_data_id);
        const form_data_res = Object.fromEntries(form_data.entries());
        console.log(form_data_res);

        var resValueData = false;
        resValueData = await ValidateData(form_data_res);
        console.log(resValueData);
        if(resValueData == true){
          var resCallApi = false;
          resCallApi = CallApi(form_data_res);

          alert_msg_id.className ="";
          alert_msg_id.classList.add("alert", "alert-success");
          alert_msg_id.textContent= "Success "+ form_data_res.details;

          ClearForm();
        }
        else{

          alert_msg_id.className ="";
          alert_msg_id.classList.add("alert", "alert-danger");
          alert_msg_id.textContent= "Unsuccessful";

        }

    }

    }
    catch (error) {
      console.error('Something went wrong:', error);
      return false;
    }
}

async function ValidateData(data) {
  if (
    !data.details_type_code ||
    !data.details_type_text ||
    !data.meney ||
    !data.wallet_type_code ||
    !data.wallet_type_text
  ) {
    return false;
  }

  if (isNaN(data.meney)) {
    return false;
  }

  return true;
}


async function CallApi(data) {

  const url = 'https://script.google.com/macros/s/AKfycby3GC18UFJFucWCuVFBntzgv_9jbTzqcwmjroTPc38EhyWSmjgfPev5tdLoojoPDKWCjg/exec?action=setWallet';

  try {
    const response = await fetch(url, {
      method: 'POST',
      mode: 'no-cors', // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ mode ‡πÄ‡∏õ‡πá‡∏ô no-cors
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(data)
    });

    // ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡πÉ‡∏ô mode no-cors ‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡πà‡∏≤‡∏ô response ‡πÑ‡∏î‡πâ
    console.log('Success:', response.data);
    return true ;
  } catch (error) {
    console.error('Error:', error);
    return false;
  }
}


function ClearForm() {
  // Reset the form (this will clear all input fields)
  document.getElementById("form_data_id").reset();
  
  wallet_type_code_id.value = "";
  wallet_type_text_id.value ="";

   // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏™‡∏µ‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Å‡πà‡∏≠‡∏ô
   ClearButtonStyles();
}


function ShareCodeFriToFb() {
    try {

        // ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
        const refcode = "AAAAA"
        const herodirect = "https://mrnotv8.github.io/toknowlife.github.io/";

        if (!refcode) {
            console.error('ref_code ‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤');
            alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á');
            return;
        }

        if (!herodirect) {
            console.error('urlDynasty ‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤');
            alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ‡πÑ‡∏°‡πà‡∏û‡∏ö URL');
            return;
        }

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á URL ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏ä‡∏£‡πå
        const shareUrl = `${herodirect}?url_ref_code=${refcode}&Clear=Clear`;

        // ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ä‡∏£‡πå
        const shareTitle = "Dynasty Chronicles - Three Kingdoms Battle!";
        const shareDescription = "üî• Wage war in the Three Kingdoms! Join the Dynasty Chronicles pre-registration and help me earn epic rewards! Tap the link and be my ally.";
        const userMessage = `${shareDescription}\n\n${shareUrl}\n\n#DynastyChronicles #ThreeKingdoms #Gaming`;

        // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï meta tags ‡πÅ‡∏ö‡∏ö dynamic (‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£)
        updateMetaTags(shareTitle, shareDescription, shareUrl);

        // Log ‡πÄ‡∏û‡∏∑‡πà‡∏≠ debug
        console.log('Share URL:', shareUrl);
        console.log('Share Message:', userMessage);

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á Facebook Share URL
        const facebookShareUrl = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(shareUrl)}`;

        // ‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ä‡∏£‡πå
        const popup = window.open(facebookShareUrl, 'facebook-share-dialog', 'width=626,height=436,scrollbars=yes,resizable=yes');

        // Copy ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á clipboard ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏´‡πâ user paste ‡πÄ‡∏≠‡∏á
        if (popup) {
            setTimeout(() => {
                if (navigator.clipboard) {
                    navigator.clipboard.writeText(userMessage).then(() => {
                        console.log('‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å copy ‡πÑ‡∏õ‡∏¢‡∏±‡∏á clipboard ‡πÅ‡∏•‡πâ‡∏ß');
                        alert('‚úÖ ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ä‡∏£‡πå‡∏ñ‡∏π‡∏Å copy ‡πÑ‡∏õ‡∏¢‡∏±‡∏á clipboard ‡πÅ‡∏•‡πâ‡∏ß!\n\n‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ Paste (Ctrl+V) ‡∏•‡∏á‡πÉ‡∏ô‡πÇ‡∏û‡∏™‡∏ï‡πå Facebook ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢!');
                    }).catch(err => {
                        console.log('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ copy ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏î‡πâ:', err);
                        showMessagePrompt(userMessage);
                    });
                } else {
                    showMessagePrompt(userMessage);
                }
            }, 1000);
        }

    } catch (error) {
        console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏ä‡∏£‡πå:', error);
        alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏ä‡∏£‡πå Facebook');
    }
}

// Function ‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï meta tags
function updateMetaTags(title, description, url) {
    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï og:title
    let titleMeta = document.querySelector('meta[property="og:title"]');
    if (!titleMeta) {
        titleMeta = document.createElement('meta');
        titleMeta.setAttribute('property', 'og:title');
        document.head.appendChild(titleMeta);
    }
    titleMeta.setAttribute('content', title);

    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï og:description
    let descMeta = document.querySelector('meta[property="og:description"]');
    if (!descMeta) {
        descMeta = document.createElement('meta');
        descMeta.setAttribute('property', 'og:description');
        document.head.appendChild(descMeta);
    }
    descMeta.setAttribute('content', description);

    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï og:url
    let urlMeta = document.querySelector('meta[property="og:url"]');
    if (!urlMeta) {
        urlMeta = document.createElement('meta');
        urlMeta.setAttribute('property', 'og:url');
        document.head.appendChild(urlMeta);
    }
    urlMeta.setAttribute('content', url);
}

// Function ‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á message prompt
function showMessagePrompt(message) {
    const textarea = document.createElement('textarea');
    textarea.value = message;
    textarea.style.position = 'fixed';
    textarea.style.top = '50%';
    textarea.style.left = '50%';
    textarea.style.transform = 'translate(-50%, -50%)';
    textarea.style.width = '400px';
    textarea.style.height = '200px';
    textarea.style.zIndex = '9999';
    textarea.style.padding = '10px';
    textarea.style.border = '2px solid #4267B2';
    textarea.style.borderRadius = '8px';
    textarea.select();

    document.body.appendChild(textarea);

    setTimeout(() => {
        document.body.removeChild(textarea);
    }, 10000);

    alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤ Copy ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å text box ‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏≤‡∏Å‡∏è‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤ ‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡∏≥‡πÑ‡∏õ Paste ‡πÉ‡∏ô Facebook!');
}


